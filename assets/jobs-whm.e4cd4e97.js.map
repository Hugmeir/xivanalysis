{"version":3,"file":"assets/jobs-whm.e4cd4e97.js","mappings":"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","sources":["webpack://@xivanalysis/client/./src/parser/jobs/whm/modules/ActionTimeline.tsx","webpack://@xivanalysis/client/./src/parser/jobs/whm/modules/DISPLAY_ORDER.ts","webpack://@xivanalysis/client/./src/parser/jobs/whm/modules/CastTime.ts","webpack://@xivanalysis/client/./src/parser/jobs/whm/modules/Defensives.ts","webpack://@xivanalysis/client/./src/parser/jobs/whm/modules/DoTs.tsx","webpack://@xivanalysis/client/./src/parser/jobs/whm/modules/Interrupts.tsx","webpack://@xivanalysis/client/./src/parser/jobs/whm/modules/Lilies.tsx","webpack://@xivanalysis/client/./src/parser/jobs/whm/modules/oGCDs.tsx","webpack://@xivanalysis/client/./src/parser/jobs/whm/modules/Overheal.tsx","webpack://@xivanalysis/client/./src/parser/jobs/whm/modules/Swiftcast.tsx","webpack://@xivanalysis/client/./src/parser/jobs/whm/modules/Thinair.tsx","webpack://@xivanalysis/client/./src/parser/jobs/whm/modules/Tincture.tsx","webpack://@xivanalysis/client/./src/parser/jobs/whm/modules/index.ts"],"sourcesContent":["import {ActionRow, ActionTimeline as CoreActionTimeline} from 'parser/core/modules/ActionTimeline'\n\nexport class ActionTimeline extends CoreActionTimeline {\n\tstatic override rows: ActionRow[] = [\n\t\t...CoreActionTimeline.rows,\n\t\t// Selfbuffs\n\t\t'PRESENCE_OF_MIND',\n\t\t'THIN_AIR',\n\t\t//oGCD SingleTarget\n\t\t'DIVINE_BENISON',\n\t\t'TETRAGRAMMATON',\n\t\t'BENEDICTION',\n\t\t'AQUAVEIL',\n\t\t//oGCD AoE Heal\n\t\t['LITURGY_OF_THE_BELL', 'LITURGY_OF_THE_BELL_ACTIVATION', 'LITURGY_OF_THE_BELL_ON_DAMAGE'],\n\t\t'ASSIZE',\n\t\t'ASYLUM',\n\t\t//Group Mitigations\n\t\t'TEMPERANCE',\n\t\t'PLENARY_INDULGENCE',\n\t\t//Role Actions\n\t\t'LUCID_DREAMING',\n\t\t'SWIFTCAST',\n\t\t'SURECAST',\n\t]\n}\n","export enum DISPLAY_ORDER {\n\tTINCTURES = 1,\n\tTHIN_AIR = 2,\n\tSWIFTCAST = 3,\n\tINTERRUPTS = 4,\n}\n","import {Event} from 'event'\nimport {filter} from 'parser/core/filter'\nimport CoreCastTime from 'parser/core/modules/CastTime'\n\nexport class CastTime extends CoreCastTime {\n\tprivate pomIndex: number | null = null\n\n\toverride initialise() {\n\t\tsuper.initialise()\n\n\t\tconst presenceOfMindFilter = filter<Event>()\n\t\t\t.target(this.parser.actor.id)\n\t\t\t.status(this.data.statuses.PRESENCE_OF_MIND.id)\n\n\t\tthis.addEventHook(presenceOfMindFilter.type('statusApply'), this.onApplyPresence)\n\t\tthis.addEventHook(presenceOfMindFilter.type('statusRemove'), this.onRemovePresence)\n\t}\n\n\tprivate onApplyPresence(): void {\n\t\tconst presence = this.data.statuses.PRESENCE_OF_MIND\n\t\tthis.pomIndex = this.setPercentageAdjustment('all', presence.speedModifier, 'both')\n\t}\n\n\tprivate onRemovePresence(): void {\n\t\tthis.reset(this.pomIndex)\n\t\tthis.pomIndex = null\n\t}\n}\n","import {Defensives as CoreDefensives} from 'parser/core/modules/Defensives'\n\nexport class Defensives extends CoreDefensives {\n\tprotected override trackedDefensives = [\n\t\tthis.data.actions.LITURGY_OF_THE_BELL,\n\t\tthis.data.actions.ASYLUM,\n\t\tthis.data.actions.AQUAVEIL,\n\t\tthis.data.actions.DIVINE_BENISON,\n\t\tthis.data.actions.TEMPERANCE,\n\t]\n}\n","import {Trans} from '@lingui/react'\nimport {DataLink} from 'components/ui/DbLink'\nimport {dependency} from 'parser/core/Injectable'\nimport Checklist, {Requirement, TARGET, TieredRule} from 'parser/core/modules/Checklist'\nimport {DoTs as CoreDoTs} from 'parser/core/modules/DoTs'\nimport Suggestions, {SEVERITY, TieredSuggestion} from 'parser/core/modules/Suggestions'\nimport React from 'react'\n\nconst SEVERITIES = {\n\t// Clipping warnings in seconds per minute\n\tCLIPPING: {\n\t\t6000: SEVERITY.MINOR,\n\t\t9000: SEVERITY.MEDIUM,\n\t\t12000: SEVERITY.MAJOR,\n\t},\n\tUPTIME: {\n\t\t90: TARGET.WARN,\n\t\t95: TARGET.SUCCESS,\n\t},\n}\n\nexport class DoTs extends CoreDoTs {\n\t@dependency private checklist!: Checklist\n\t@dependency private suggestions!: Suggestions\n\n\tprotected override trackedStatuses = [\n\t\tthis.data.statuses.DIA.id,\n\t]\n\n\tprotected override addChecklistRules() {\n\t\tconst uptimePercent = this.getUptimePercent(this.data.statuses.DIA.id)\n\t\tthis.checklist.add(new TieredRule({\n\t\t\tname: <Trans id=\"whm.dots.rule.name\">Keep your DoTs up </Trans>,\n\t\t\tdescription: <Trans id=\"whm.dots.rule.description\">\n\t\t\t\tAs a White Mage, <DataLink status=\"DIA\" showIcon={false} showTooltip={false} /> is significant portion of your sustained damage. Aim to keep it up at all times.\n\t\t\t</Trans>,\n\t\t\ttiers: SEVERITIES.UPTIME,\n\t\t\trequirements: [\n\t\t\t\tnew Requirement({\n\t\t\t\t\tname: <Trans id=\"whm.dots.requirement.uptime-dia.name\"><DataLink status=\"DIA\" /> uptime</Trans>,\n\t\t\t\t\tpercent: uptimePercent,\n\t\t\t\t}),\n\t\t\t],\n\t\t}))\n\t}\n\n\tprotected addClippingSuggestions() {\n\t\tconst clippingPerMinute = this.getClippingAmount(this.data.statuses.DIA.id)\n\t\tthis.suggestions.add(new TieredSuggestion({\n\t\t\ticon: this.data.actions.DIA.icon,\n\t\t\tcontent: <Trans id=\"whm.dots.suggestion.clip-dia.content\">\n\t\t\t\tAvoid refreshing Dia significantly before its expiration, this will allow you to cast more Glares.\n\t\t\t</Trans>,\n\t\t\ttiers: SEVERITIES.CLIPPING,\n\t\t\tvalue: clippingPerMinute,\n\t\t\twhy: <Trans id=\"whm.dots.suggestion.clip-dia.why\">\n\t\t\t\tAn average of {this.parser.formatDuration(clippingPerMinute)} of <DataLink status=\"DIA\" /> clipped per minute due to early refreshes.\n\t\t\t</Trans>,\n\t\t}))\n\t}\n}\n","import {Trans} from '@lingui/react'\nimport {DataLink} from 'components/ui/DbLink'\nimport {Interrupts as CoreInterrupts} from 'parser/core/modules/Interrupts'\nimport React from 'react'\nimport {DISPLAY_ORDER} from './DISPLAY_ORDER'\n\nexport class Interrupts extends CoreInterrupts {\n\tstatic override displayOrder = DISPLAY_ORDER.INTERRUPTS\n\toverride suggestionContent = <Trans id=\"whm.interrupts.suggestion.content\">\n\t\tAvoid interrupting casts by either prepositioning yourself or utilizing slidecasting where possible.\n\t\tUse windows created by normal <DataLink action=\"DIA\"/> refreshes to move in advance of mechanics.\n\t\tWhen that's not an option, try to plan and utilize Afflatus actions to simultaneously heal wherever needed and cover movement.\n\t\tOverwriting Dia early should be your last resort for movement.\n\t</Trans>\n}\n","import {Plural, Trans} from '@lingui/react'\nimport Color from 'color'\nimport {DataLink} from 'components/ui/DbLink'\nimport {ActionKey} from 'data/ACTIONS'\nimport {Event} from 'event'\nimport {filter} from 'parser/core/filter'\nimport {dependency} from 'parser/core/Injectable'\nimport {CounterGauge, Gauge as CoreGauge, TimerGauge} from 'parser/core/modules/Gauge'\nimport Suggestions, {SEVERITY, TieredSuggestion} from 'parser/core/modules/Suggestions'\nimport React from 'react'\n\nconst LILY_MAX_STACKS = 3\nconst LILY_INTERVAL_600 = 30000\nconst LILY_INTERVAL_610 = 20000\n\nconst MISERY_COST = 3\n\n/* eslint-disable @typescript-eslint/no-magic-numbers */\nconst GAUGE_COLOURS = {\n\tLILY_GAUGE: Color('#4f73b5').fade(0.25),\n\tLILY_TIMER: Color('#4f73b5').fade(0.75),\n\tBLOODLILY: Color('#b52d6c').fade(0.5),\n}\n/* eslint-enable @typescript-eslint/no-magic-numbers */\n\nconst LILY_CONSUMERS: ActionKey[] = [\n\t'AFFLATUS_RAPTURE',\n\t'AFFLATUS_SOLACE',\n]\n\nconst BLOODLILY_CONSUMERS: ActionKey[] = [\n\t'AFFLATUS_MISERY',\n]\n\nconst SEVERITIES = {\n\tBLOODLILY_LEFTOVER: {\n\t\t1: SEVERITY.MINOR,\n\t\t3: SEVERITY.MAJOR,\n\t},\n\tBLOODLILY_OVERCAP: {\n\t\t1: SEVERITY.MINOR,\n\t\t2: SEVERITY.MEDIUM,\n\t\t3: SEVERITY.MAJOR,\n\t},\n\tLILY_OVERCAP_600: {\n\t\t1: SEVERITY.MINOR,\n\t},\n\tLILY_OVERCAP_610: {\n\t\t1: SEVERITY.MEDIUM,\n\t\t3: SEVERITY.MAJOR,\n\t},\n}\n\nexport class Lilies extends CoreGauge {\n\n\tstatic override handle = 'gauge'\n\n\t@dependency private suggestions!: Suggestions\n\n\tprivate lilyInterval = this.parser.patch.before('6.1') ? LILY_INTERVAL_600 : LILY_INTERVAL_610\n\n\tprivate lilyGauge = this.add(new CounterGauge({\n\t\tmaximum: LILY_MAX_STACKS,\n\t\tinitialValue: 0,\n\t\tgraph: {\n\t\t\tlabel: <Trans id=\"whm.gauge.lily.stacks.label\">Lily</Trans>,\n\t\t\tcolor: GAUGE_COLOURS.LILY_GAUGE,\n\t\t},\n\t}))\n\n\tprivate lilyTimer = this.add(new TimerGauge({\n\t\tmaximum: this.lilyInterval,\n\t\tonExpiration: this.onGain.bind(this),\n\t\tgraph: {\n\t\t\tlabel: <Trans id=\"whm.gauge.lily.timer.label\">Lily Timer</Trans>,\n\t\t\tcolor: GAUGE_COLOURS.LILY_TIMER,\n\t\t},\n\n\t}))\n\n\tprivate bloodLilyGauge = this.add(new CounterGauge({\n\t\tmaximum: LILY_MAX_STACKS,\n\t\tinitialValue: 0,\n\t\tgraph: {\n\t\t\tlabel: <Trans id=\"whm.gauge.bloodlily.stacks.label\">Blood Lily</Trans>,\n\t\t\tcolor: GAUGE_COLOURS.BLOODLILY,\n\t\t},\n\t}))\n\n\toverride initialise() {\n\t\tsuper.initialise()\n\n\t\tconst playerFilter = filter<Event>().source(this.parser.actor.id)\n\t\tthis.addEventHook(playerFilter.type('action').action(this.data.matchActionId(LILY_CONSUMERS)), this.onSpend)\n\t\tthis.addEventHook(playerFilter.type('action').action(this.data.matchActionId(BLOODLILY_CONSUMERS)), () => this.bloodLilyGauge.spend(MISERY_COST))\n\n\t\tthis.addEventHook('complete', this.onComplete)\n\n\t\tthis.lilyTimer.start()\n\t}\n\n\tprivate onGain() {\n\t\tthis.lilyGauge.generate(1)\n\n\t\t// When we gain a Lily, if the gauge isn't already capped the timer starts\n\t\tif (!this.lilyGauge.capped) {\n\t\t\tthis.lilyTimer.start()\n\t\t}\n\t}\n\n\tprivate onSpend() {\n\t\t// Each spend also generates a Blood Lily\n\t\tthis.bloodLilyGauge.generate(1)\n\t\tthis.lilyGauge.spend(1)\n\n\t\t// When we spend a Lily, if the timer isn't running we restart it\n\t\tif (this.lilyTimer.expired) {\n\t\t\tthis.lilyTimer.start()\n\t\t}\n\n\t}\n\n\tprivate onComplete() {\n\t\t// Calculate lost Lilies for the fight, does not correct for UTA or other downtime\n\t\tconst lostLilies = Math.floor(this.lilyTimer.getExpirationTime() / this.lilyInterval)\n\n\t\tconst lilyOvercapSuggestion_600 = <Trans id=\"whm.gauge.lily.suggestions.overcap.content.600\">\n\t\t\tTry to use <DataLink action=\"AFFLATUS_RAPTURE\" /> or <DataLink action=\"AFFLATUS_SOLACE\" /> before using other GCD heals. It's okay to cap your lilies if you don't need to heal, move, or weave with them.\n\t\t</Trans>\n\n\t\tconst lilyOvercapSuggestion_610 = <Trans id=\"whm.gauge.lily.suggestions.overcap.content.610\">\n\t\t\tTry to use <DataLink action=\"AFFLATUS_RAPTURE\" /> or <DataLink action=\"AFFLATUS_SOLACE\" /> before using other GCD heals. It's okay to overheal with your lilies as they are to be used for mana management and movement aswell as healing.\n\t\t</Trans>\n\n\t\tthis.suggestions.add(new TieredSuggestion({\n\t\t\ticon: this.data.actions.AFFLATUS_MISERY.icon,\n\t\t\tcontent: <Trans id=\"whm.gauge.bloodlily.suggestions.overcap.content\">\n\t\t\t\tTry to use <DataLink action=\"AFFLATUS_MISERY\" /> to avoid wasting Blood Lily growth from overcapping the gauge.\n\t\t\t</Trans>,\n\t\t\ttiers: SEVERITIES.BLOODLILY_OVERCAP,\n\t\t\tvalue: this.bloodLilyGauge.overCap,\n\t\t\twhy: <Trans id=\"whm.gauge.bloodlily.suggestions.overcap.why\">\n\t\t\t\t<Plural value={this.bloodLilyGauge.overCap} one=\"# Blood Lily\" other=\"# Blood Lilies\" /> did not bloom due to using a Lily too early.\n\t\t\t</Trans>,\n\t\t})\n\t\t)\n\n\t\tthis.suggestions.add(new TieredSuggestion({\n\t\t\ticon: this.data.actions.AFFLATUS_SOLACE.icon,\n\t\t\tcontent: this.parser.patch.before('6.1') ? lilyOvercapSuggestion_600 : lilyOvercapSuggestion_610,\n\t\t\ttiers: this.parser.patch.before('6.1') ? SEVERITIES.LILY_OVERCAP_600 : SEVERITIES.LILY_OVERCAP_610,\n\t\t\tvalue: lostLilies,\n\t\t\twhy: <Trans id=\"whm.gauge.lily.suggestions.overcap.why\">\n\t\t\t\t{<Plural value={lostLilies} one=\"# Lily\" other=\"# Lilies\" />} were wasted due to overcapping the gauge.\n\t\t\t</Trans>,\n\t\t}))\n\n\t\tthis.suggestions.add(new TieredSuggestion({\n\t\t\ticon: this.data.actions.AFFLATUS_MISERY.icon,\n\t\t\tcontent: <Trans id=\"whm.gauge.bloodlily.suggestions.leftover.content\">\n\t\t\t\tTry to finish the fight with no leftover Blood Lilies.\n\t\t\t</Trans>,\n\t\t\ttiers: SEVERITIES.BLOODLILY_LEFTOVER,\n\t\t\tvalue: this.bloodLilyGauge.value,\n\t\t\twhy: <Trans id=\"whm.gauge.bloodlily.suggestions.leftover.why\">\n\t\t\t\t{<Plural value={this.bloodLilyGauge.value} one=\"# Blood Lily\" other=\"# Blood Lilies\" />} went unused.\n\t\t\t</Trans>,\n\t\t}))\n\n\t}\n}\n\n","import {Trans} from '@lingui/react'\nimport {DataLink} from 'components/ui/DbLink'\nimport {dependency} from 'parser/core/Injectable'\nimport {CooldownDowntime} from 'parser/core/modules/CooldownDowntime'\nimport Suggestions, {SEVERITY, TieredSuggestion} from 'parser/core/modules/Suggestions'\nimport React, {Fragment} from 'react'\n\nconst DPS_TARGET_PERCENT = 75\n\nexport class OGCDs extends CooldownDowntime {\n\t@dependency private suggestions!: Suggestions\n\n\ttrackedCds = [\n\t\t{cooldowns: [this.data.actions.ASSIZE], weight: 1},\n\t\t{cooldowns: [this.data.actions.PRESENCE_OF_MIND], weight: 1},\n\t]\n\toverride suggestionOnlyCooldowns = [\n\t\t{\n\t\t\tcooldowns: [this.data.actions.LITURGY_OF_THE_BELL],\n\t\t\ttiers: {2: SEVERITY.MINOR, 3: SEVERITY.MEDIUM},\n\t\t\tcontent: <Fragment>\n\t\t\t\t<Trans id=\"whm.ogcds.suggestions.liturgyofthebell.content\">Use <DataLink action=\"LITURGY_OF_THE_BELL\"/> in an encounter when required to heal multiple hits in a row.</Trans>\n\t\t\t</Fragment>,\n\t\t},\n\t\t{\n\t\t\tcooldowns: [this.data.actions.ASYLUM],\n\t\t\ttiers: {2: SEVERITY.MINOR, 3: SEVERITY.MEDIUM},\n\t\t\tcontent: <Fragment>\n\t\t\t\t<Trans id=\"whm.ogcds.suggestions.asylum.content\">Use <DataLink action=\"ASYLUM\"/> frequently in an encounter whenever party members will be close enough to stand in the bubble. For instances where members are frequently spread too far, Asylum can still be used for tank healing.</Trans>\n\t\t\t</Fragment>,\n\t\t},\n\t\t{\n\t\t\tcooldowns: [this.data.actions.AQUAVEIL],\n\t\t\ttiers: {2: SEVERITY.MINOR, 3: SEVERITY.MEDIUM},\n\t\t\tcontent: <Fragment>\n\t\t\t\t<Trans id=\"whm.ogcds.suggestions.AQUAVEIL.content\">Use <DataLink action=\"AQUAVEIL\"/> as often as possible to minimize single target healing needed. </Trans>\n\t\t\t</Fragment>,\n\t\t},\n\t\t{\n\t\t\tcooldowns: [this.data.actions.DIVINE_BENISON],\n\t\t\ttiers: {8: SEVERITY.MINOR, 12: SEVERITY.MEDIUM},\n\t\t\tcontent: <Fragment>\n\t\t\t\t<Trans id=\"whm.ogcds.suggestions.divine_benison.content\">Weave <DataLink action=\"DIVINE_BENISON\"/> as often as possible to minimize single target healing needed. However, it is not worth clipping to apply a benison. Do not hold Divine Benison for tank busters. Since Dia's duration is 30s, try to weave Divine Benison with every Dia that you don't have two more important weaves to execute.</Trans>\n\t\t\t</Fragment>,\n\t\t},\n\t\t{\n\t\t\tcooldowns: [this.data.actions.TEMPERANCE],\n\t\t\ttiers: {2: SEVERITY.MINOR, 3: SEVERITY.MEDIUM},\n\t\t\tcontent: <Fragment>\n\t\t\t\t<Trans id=\"whm.ogcds.suggestions.temperance.content\">Use <DataLink action=\"TEMPERANCE\"/> often to mitigate incoming raid damage and boost GCD healing potency. Avoid clipping to apply it.</Trans>\n\t\t\t</Fragment>,\n\t\t},\n\t]\n\n\toverride checklistTarget = DPS_TARGET_PERCENT\n\n\toverride addJobSuggestions() {\n\t\tthis.suggestionOnlyCooldowns.forEach(cooldownGroup => {\n\n\t\t\t// set up for suggestion(s)\n\t\t\tconst maxUses = this.calculateMaxUsages(cooldownGroup)\n\t\t\tconst uses = this.calculateUsageCount(cooldownGroup)\n\t\t\tconst missed = maxUses - uses\n\n\t\t\tconst why = <Fragment>\n\t\t\t\t<Trans id=\"whm.ogcds.suggestions.why\">\n\t\t\t\t\tYou missed about {missed} out of a possible {maxUses} casts.\n\t\t\t\t</Trans>\n\t\t\t</Fragment>\n\n\t\t\tconst action = cooldownGroup.cooldowns[0]\n\t\t\tthis.suggestions.add(new TieredSuggestion({\n\t\t\t\ticon: action.icon,\n\t\t\t\tcontent: cooldownGroup.content,\n\t\t\t\twhy: why,\n\t\t\t\ttiers: cooldownGroup.tiers,\n\t\t\t\tvalue: missed,\n\t\t\t}))\n\t\t})\n\t}\n}\n","import {Trans} from '@lingui/react'\nimport {Overheal as CoreOverheal} from 'parser/core/modules/Overheal'\nimport React from 'react'\n\nexport class Overheal extends CoreOverheal {\n\n\toverride checklistRuleBreakout = true\n\toverride displayPieChart = true\n\toverride displaySuggestion = true\n\n\toverride trackedHealCategories = [\n\t\t{\n\t\t\tname: <Trans id=\"whm.overheal.hot.name\">Healing Over Time</Trans>,\n\t\t\tcolor: '#157f1f',\n\t\t\ttrackedHealIds: [\n\t\t\t\tthis.data.statuses.REGEN.id,\n\t\t\t\tthis.data.actions.MEDICA_II.id,\n\t\t\t\tthis.data.statuses.MEDICA_II.id,\n\t\t\t\tthis.data.actions.ASYLUM.id,\n\t\t\t\tthis.data.statuses.ASYLUM.id,\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tname: <Trans id=\"whm.overheal.assize.name\">Assize</Trans>,\n\t\t\tcolor: '#12ba45',\n\t\t\ttrackedHealIds: [this.data.actions.ASSIZE.id],\n\t\t},\n\t\t{\n\t\t\tname: <Trans id=\"whm.overheal.liturgyofthebell.name\">Liturgy of the Bell</Trans>,\n\t\t\tcolor: '#00b5ad',\n\t\t\ttrackedHealIds: [\n\t\t\t\tthis.data.actions.LITURGY_OF_THE_BELL_ON_DAMAGE.id,\n\t\t\t\tthis.data.actions.LITURGY_OF_THE_BELL_ON_EXPIRY.id,\n\t\t\t\tthis.data.actions.LITURGY_OF_THE_BELL_ACTIVATION.id,\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tname: <Trans id=\"whm.overheal.afflatus.name\">Afflatus Healing</Trans>,\n\t\t\tcolor: '#a0eade',\n\t\t\ttrackedHealIds: [\n\t\t\t\tthis.data.actions.AFFLATUS_RAPTURE.id,\n\t\t\t\tthis.data.actions.AFFLATUS_SOLACE.id,\n\t\t\t],\n\t\t},\n\t]\n}\n","import {Trans} from '@lingui/macro'\nimport {DataLink} from 'components/ui/DbLink'\nimport {Swiftcast as CoreSwiftcast} from 'parser/core/modules/Swiftcast'\nimport React from 'react'\nimport {DISPLAY_ORDER} from './DISPLAY_ORDER'\n\nexport class Swiftcast extends CoreSwiftcast {\n\tstatic override displayOrder = DISPLAY_ORDER.SWIFTCAST\n\toverride suggestionContent = <Trans id=\"whm.swiftcast.missed.suggestion.content\">Cast a spell with <DataLink action=\"SWIFTCAST\"/> before it expires. This allows you to instantly cast spells with a cast times, such as <DataLink action=\"RAISE\"/> for a quick revive, or <DataLink action=\"GLARE_III\"/> for weaving.</Trans>\n}\n","import {t} from '@lingui/macro'\nimport {Trans} from '@lingui/react'\nimport {ActionLink} from 'components/ui/DbLink'\nimport Rotation from 'components/ui/Rotation'\nimport {Action} from 'data/ACTIONS'\nimport {Event, Events} from 'event'\nimport {Analyser} from 'parser/core/Analyser'\nimport {filter} from 'parser/core/filter'\nimport {dependency} from 'parser/core/Injectable'\nimport {Data} from 'parser/core/modules/Data'\nimport React, {Fragment, ReactNode} from 'react'\nimport {Accordion} from 'semantic-ui-react'\nimport {DISPLAY_ORDER} from './DISPLAY_ORDER'\n\ninterface ThinAirRecord {\n\tstart: number,\n\tend?: number,\n\tcasts: Array<Action['id']>,\n\tmpsaved: number,\n}\n\nconst USAGE = {\n\tBAD: 'red',\n\tOKAY: 'orange',\n\tGOOD: 'green',\n}\n\nconst MP_MARGIN = 900\n\nexport class Thinair extends Analyser {\n\tstatic override handle = 'thinair'\n\tstatic override title = t('whm.thinair.title')`Thin Air`\n\tstatic override displayOrder = DISPLAY_ORDER.THIN_AIR\n\n\t@dependency private data!: Data\n\n\tprivate active = false\n\tprivate history: ThinAirRecord[] = []\n\tprivate currentRecord: ThinAirRecord = {start: -1, end: -1, casts: [], mpsaved: 0}\n\n\toverride initialise() {\n\t\tconst thinairFilter = filter<Event>()\n\t\t\t.source(this.parser.actor.id)\n\t\t\t.status(this.data.statuses.THIN_AIR.id)\n\n\t\tthis.addEventHook(thinairFilter.type('statusApply'), this.onThinAirCast)\n\t\tthis.addEventHook(thinairFilter.type('statusRemove'), this.onThinAirRemove)\n\t\tthis.addEventHook(filter<Event>().source(this.parser.actor.id).type('action'), this.onCast)\n\t\tthis.addEventHook('complete', this.onComplete)\n\t}\n\n\tprivate onThinAirCast(ev: Events['statusApply']) {\n\t\tthis.startThinAir(ev.timestamp)\n\t}\n\n\tprivate onThinAirRemove(ev: Events['statusRemove']) {\n\t\tthis.stopAndSave(ev.timestamp)\n\t}\n\n\tprivate onCast(ev: Events['action']) {\n\t\tconst actionid = ev.action\n\n\t\t// Don't track autos\n\t\tconst action = this.data.getAction(actionid)\n\t\tif (!this.active || action == null || action.autoAttack) {\n\t\t\treturn\n\t\t}\n\n\t\tif (action.mpCost) {\n\t\t\tthis.currentRecord.mpsaved += action.mpCost\n\t\t}\n\n\t\t// Save the event\n\t\tthis.currentRecord.casts.push(ev.action)\n\t}\n\n\tprivate startThinAir(timestamp: number) {\n\t\t// Ignore if we are already active\n\t\tif (this.active) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.active = true\n\t\tthis.currentRecord = {\n\t\t\tstart: timestamp,\n\t\t\tcasts: [],\n\t\t\tmpsaved: 0,\n\t\t}\n\n\t\t// Add thin air action as the 1st element for cosmetic reasons\n\t\t// and keeping in style with astro's lightspeed module\n\t\tthis.currentRecord.casts.push(this.data.actions.THIN_AIR.id)\n\t}\n\n\tprivate stopAndSave(timestamp: number) {\n\t\tif (!this.active) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.active = false\n\t\tthis.currentRecord.end = timestamp\n\t\tthis.history.push(this.currentRecord)\n\t}\n\n\tprivate onComplete(ev: Events['complete']) {\n\t\tif (this.active) {\n\t\t\tthis.stopAndSave(ev.timestamp)\n\t\t}\n\t}\n\n\tprivate getSavingsColor(amount: number) {\n\t\t//Check how much MP was saved\n\t\tif (amount < MP_MARGIN) {\n\t\t\treturn USAGE.BAD\n\t\t}\n\t\tif (amount === MP_MARGIN) {\n\t\t\treturn USAGE.OKAY\n\t\t}\n\t\treturn USAGE.GOOD\n\t}\n\n\toverride output(): ReactNode {\n\t\tconst casts = this.history.length\n\t\tif (casts === 0) {\n\t\t\treturn <Fragment>\n\t\t\t\t<p><span><Trans id=\"whm.thinair.messages.no-casts\">No casts recorded for <ActionLink {...this.data.actions.THIN_AIR}/></Trans></span></p>\n\t\t\t</Fragment>\n\t\t}\n\n\t\tconst panels = this.history.map(record => {\n\t\t\treturn {\n\t\t\t\tkey: record.start,\n\t\t\t\ttitle: {\n\t\t\t\t\tcontent:\n\t\t\t\t\t\t<span style={{color: this.getSavingsColor(record.mpsaved)}}>\n\t\t\t\t\t\t\t{this.parser.formatEpochTimestamp(record.start)}\n\t\t\t\t\t\t\t<span> - </span>\n\t\t\t\t\t\t\t{record.mpsaved} MP saved\n\t\t\t\t\t\t</span>,\n\t\t\t\t},\n\t\t\t\tcontent: {\n\t\t\t\t\tcontent: <Rotation events={record.casts.map(x => ({action: x}))}/>,\n\t\t\t\t},\n\t\t\t}\n\t\t})\n\n\t\tconst thinairDisplay = <Accordion\n\t\t\texclusive={false}\n\t\t\tpanels={panels}\n\t\t\tstyled\n\t\t\tfluid\n\t\t></Accordion>\n\n\t\treturn <Fragment>\n\t\t\t<p><Trans id=\"whm.thinair.messages.explanation\">\n\t\t\t\tThe main use of <ActionLink {...this.data.actions.THIN_AIR} /> should be to save MP on high MP-cost spells. Don't be afraid to hold it and lose a use over the fight as long as it covers an MP-heavy spell such as usages of <ActionLink {...this.data.actions.MEDICA_II}/>, <ActionLink {...this.data.actions.CURE_III}/>, and <ActionLink {...this.data.actions.RAISE} />. Usages that did not save a considerable amount of MP are marked red.\n\t\t\t</Trans></p>\n\t\t\t{thinairDisplay}\n\t\t</Fragment>\n\t}\n}\n","import {Trans} from '@lingui/react'\nimport {DataLink} from 'components/ui/DbLink'\nimport {ExpectedActionsEvaluator} from 'parser/core/modules/ActionWindow'\nimport {SEVERITY} from 'parser/core/modules/Suggestions'\nimport {Tincture as CoreTincture} from 'parser/core/modules/Tincture'\nimport React from 'react'\nimport {DISPLAY_ORDER} from './DISPLAY_ORDER'\n\nexport class Tincture extends CoreTincture {\n\tstatic override displayOrder = DISPLAY_ORDER.TINCTURES\n\n\toverride initialise() {\n\t\tsuper.initialise()\n\n\t\tthis.addEvaluator(new ExpectedActionsEvaluator({\n\t\t\texpectedActions: [\n\t\t\t\t{\n\t\t\t\t\taction: this.data.actions.ASSIZE,\n\t\t\t\t\texpectedPerWindow: 1,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\taction: this.data.actions.DIA,\n\t\t\t\t\texpectedPerWindow: 1,\n\t\t\t\t},\n\t\t\t],\n\t\t\tsuggestionIcon: this.data.actions.INFUSION_MND.icon,\n\t\t\tsuggestionContent: <Trans id=\"whm.tincture.suggestions.trackedActions.content\">\n\t\t\t\tTry to cover as much damage as possible with your Tinctures of Mind.\n\t\t\t</Trans>,\n\t\t\tsuggestionWindowName: <DataLink action=\"INFUSION_MND\" showIcon={false}/>,\n\t\t\tseverityTiers: {\n\t\t\t\t1: SEVERITY.MINOR,\n\t\t\t\t2: SEVERITY.MEDIUM,\n\t\t\t\t3: SEVERITY.MAJOR,\n\t\t\t},\n\t\t}))\n\t}\n}\n","import {ActionTimeline} from './ActionTimeline'\nimport {CastTime} from './CastTime'\nimport {Defensives} from './Defensives'\nimport {DoTs} from './DoTs'\nimport {Interrupts} from './Interrupts'\nimport {Lilies} from './Lilies'\nimport {OGCDs as oGCDs} from './oGCDs'\nimport {Overheal} from './Overheal'\nimport {Swiftcast} from './Swiftcast'\nimport {Thinair} from './Thinair'\nimport {Tincture} from './Tincture'\n\nexport default [\n\tActionTimeline,\n\tCastTime,\n\tDefensives,\n\tDoTs,\n\tInterrupts,\n\tLilies,\n\toGCDs,\n\tOverheal,\n\tSwiftcast,\n\tThinair,\n\tTincture,\n]\n"],"names":["ActionTimeline","CoreActionTimeline","rows","DISPLAY_ORDER","CastTime","pomIndex","presenceOfMindFilter","filter","target","this","parser","actor","id","status","data","statuses","PRESENCE_OF_MIND","addEventHook","type","onApplyPresence","onRemovePresence","presence","setPercentageAdjustment","speedModifier","reset","CoreCastTime","Defensives","trackedDefensives","actions","LITURGY_OF_THE_BELL","ASYLUM","AQUAVEIL","DIVINE_BENISON","TEMPERANCE","CoreDefensives","SEVERITIES","CLIPPING","SEVERITY","UPTIME","TARGET","DoTs","Checklist","Suggestions","trackedStatuses","DIA","uptimePercent","getUptimePercent","checklist","add","TieredRule","name","Trans","description","showIcon","showTooltip","tiers","requirements","Requirement","percent","clippingPerMinute","getClippingAmount","suggestions","TieredSuggestion","icon","content","value","why","formatDuration","CoreDoTs","dependency","Interrupts","suggestionContent","action","CoreInterrupts","displayOrder","INTERRUPTS","GAUGE_COLOURS","LILY_GAUGE","Color","fade","LILY_TIMER","BLOODLILY","LILY_CONSUMERS","BLOODLILY_CONSUMERS","BLOODLILY_LEFTOVER","BLOODLILY_OVERCAP","LILY_OVERCAP_600","LILY_OVERCAP_610","Lilies","lilyInterval","patch","before","lilyGauge","CounterGauge","maximum","initialValue","graph","label","color","lilyTimer","TimerGauge","onExpiration","onGain","bind","bloodLilyGauge","playerFilter","source","matchActionId","onSpend","spend","onComplete","start","generate","capped","expired","lostLilies","Math","floor","getExpirationTime","lilyOvercapSuggestion_600","lilyOvercapSuggestion_610","AFFLATUS_MISERY","overCap","AFFLATUS_SOLACE","CoreGauge","handle","OGCDs","trackedCds","cooldowns","ASSIZE","weight","suggestionOnlyCooldowns","Fragment","checklistTarget","forEach","cooldownGroup","maxUses","calculateMaxUsages","missed","calculateUsageCount","CooldownDowntime","Overheal","checklistRuleBreakout","displayPieChart","displaySuggestion","trackedHealCategories","trackedHealIds","REGEN","MEDICA_II","LITURGY_OF_THE_BELL_ON_DAMAGE","LITURGY_OF_THE_BELL_ON_EXPIRY","LITURGY_OF_THE_BELL_ACTIVATION","AFFLATUS_RAPTURE","CoreOverheal","Swiftcast","CoreSwiftcast","SWIFTCAST","Thinair","Data","active","history","currentRecord","end","casts","mpsaved","thinairFilter","THIN_AIR","onThinAirCast","onThinAirRemove","onCast","ev","startThinAir","timestamp","stopAndSave","actionid","getAction","autoAttack","mpCost","push","amount","length","panels","record","key","title","style","getSavingsColor","formatEpochTimestamp","Rotation","events","x","thinairDisplay","Accordion","exclusive","styled","fluid","CURE_III","RAISE","Analyser","Tincture","addEvaluator","ExpectedActionsEvaluator","expectedActions","expectedPerWindow","suggestionIcon","INFUSION_MND","suggestionWindowName","severityTiers","CoreTincture","TINCTURES","oGCDs"],"sourceRoot":""}